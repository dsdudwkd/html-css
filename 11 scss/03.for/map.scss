/*
map
리스트 형식의 변수를 반복하는 반복문

리스트와 맵의 차이점
list에서 ()를 사용하면 map 형식으로 됨
$변수명: 값1, 값2, 값3,... => list 형식 (배열 방식)
$변수명: (속성1:값1, 속성2:값2, ...) => map 형식 (객체 방식)

$변수명 : (속성1:값1, 속성2:값2,...)
*/
$menu:(coffee:brown, tea:green, drink:orange);
$menu2:(fanta:yellow, milk:white);

$menu3:map-merge($menu,$menu2); //두 개의 맵을 하나의 맵으로 합침, 앞에 있는 맵의 뒤에 두 번째 맵이 추가되는 방식

$menu4:map-remove($menu3, 'coffee'); //맵 안에 있는 키를 삭제하는 메서드(여러 개 삭제 가능)

.menu-coffee{
    background:map-get($menu, 'coffee'); //맵에 있는 값을 출력하는 메서드
    color: map-get($map: $menu, $key: 'tea');
}
.menu-tea{
    background:map-keys($map: $menu); //맵 안에 있는 모든 키를 반환하는 메서드(값은 반환x)
    background: map-keys($menu2);
    background:map-keys($menu3);
    background:map-values($map: $menu3); //맵 안에 있는 모든 키에 대한 값을 반환하는 메서드(키 반환x)
    background:map-values($map: $menu4);
}